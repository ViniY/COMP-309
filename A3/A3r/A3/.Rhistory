train[,convert]<-data.frame(apply(train[convert],2,as.factor))
str(train)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
test[,convert]<-data.frame(apply(test[convert],2,as.factor))
train<-read.csv("trainfinal.csv",header = T)
View(train)
train<-read.csv("trainfinal.csv",header = T)
View(train)
train<-read.csv("lalalala.csv",header = T)
View(train)
train<-read.csv("lalala.csv",header = T)
train<-read.csv("lalalala.csv",header = T)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
train[,convert]<-data.frame(apply(train[convert],2,as.factor))
str(train)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
test[,convert]<-data.frame(apply(test[convert],2,as.factor))
set.seed(111)
rf <-randomForest(total_income_hhld_code~.,data=train)
print(rf)
attributes(rf)
library(caret)
p1 <-predict(rf,train)
head(p1)
library(e1071)
confusionMatrix(p1,train$total_income_hhld_code)
p2<-predict(rf,test)
View(train)
names(train)[1]<c("ID")
names(train)[1]<"ID"
names(train)[1]<-"ID"
View(train)
names(test)[1]<-"ID"
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
train[,convert]<-data.frame(apply(train[convert],2,as.factor))
str(train)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
test[,convert]<-data.frame(apply(test[convert],2,as.factor))
set.seed(111)
rf <-randomForest(total_income_hhld_code~.,data=train)
print(rf)
attributes(rf)
library(caret)
p1 <-predict(rf,train)
head(p1)
library(e1071)
confusionMatrix(p1,train$total_income_hhld_code)
p2<-predict(rf,test)
p2<-predict(rf,test)
for (f in 1:length(names(train))) {
if (levels(test[,f]) > levels(train[,f])) {
levels(test[,f]) = levels(train[,f])
} else {
levels(train[,f]) = levels(test[,f])
}
}
test[test=="?"]<-NA
test<-read.csv("testfinal.csv",header = T)
test[test=="?"]<-NA
names(test)[1]<-"ID"
View(test)
p2<-predict(rf,test)
rf <-randomForest(total_income_hhld_code~.,data=train)
print(rf)
attributes(rf)
library(caret)
p1 <-predict(rf,train)
head(p1)
library(e1071)
confusionMatrix(p1,train$total_income_hhld_code)
p2<-predict(rf,test)
f<-factor(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),exclude = NULL)
length(levels(f))
levels(f)
levels(f)[is.na(levels(f))]<-"NA"
p2<-predict(rf,test)
f<-train$total_income_hhld_code.factor(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),exclude = NULL)
train1<-train
train1$total_income_hhld_code[is.na(train1$total_income_hhld_code)]<-"NA"
train1$total_income_hhld_code<-as.factor(c(1:14,NA))
str(train1)
train1$total_income_hhld_code<-factor(as.character(c(1:14,NA)),exclude = NULL)
str(train1)
levels(train1$total_income_hhld_code)[is.na(levels(train1$total_income_hhld_code))]<-"NA"
is.na(levels(train1$total_income_hhld_code))<-"NA"
str(train1)
sapply(train1, levels)
test1<-test
test1$total_income_hhld_code<-factor(as.character(c(1:14,NA)),exclude = NULL)
View(test1)
View(test)
test1<-test
test1$total_income_hhld_code<-factor(as.character(c(1:14,NA)),exclude = NULL)
str(train1)
str(test1)
library(readr)
testfinal <- read.csv("testfinal.csv", col_types = cols(total_income_hhld_code = col_factor(levels = c("1",
"2", "3", "4", "5", "6", "7", "8", "9",
"10", "11", "12", "13", "14", "NA"),header=T)))
View(testfinal)
test1$total_income_hhld_code<-as.factor(test1$total_income_hhld_code,levels=c(1:14,NA))
test1$total_income_hhld_code<-factor(c(1:14,NA),exclude = NULL)
levels(test1$total_income_hhld_code)<-c(levels(test1$total_income_hhld_code),"1","2","3","4","5","6","7","8","9","10","11","12","13","14",NA)
str(test1)
sapply(test1, levels)
sapply(train1, levels)
test1$total_income_hhld_code<-factor(c(1:14,NA),exclude = NULL)
train1$total_income_hhld_code<-factor(as.character(c(1:14,NA)),exclude = NULL)
levels(test1$total_income_hhld_code)<-c(levels(test1$total_income_hhld_code),"1","2","3","4","5","6","7","8","9","10","11","12","13","14",NA)
#test1$total_income_hhld_code<-factor(c(1:14,NA),exclude = NULL)
p2<-predict(rf,test)
train<-read.csv("lalalala.csv",header = T)
View(train)
names(train)[1]<-"ID"
View(train)
test<-read.csv("testfinal.csv",header = T)
test[test=="?"]<-NA
names(test)[1]<-"ID"
View(test)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
train[,convert]<-data.frame(apply(train[convert],2,as.factor))
str(train)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
test[,convert]<-data.frame(apply(test[convert],2,as.factor))
set.seed(111)
rf <-randomForest(total_income_hhld_code~.,data=train)
library(caret)
p1 <-predict(rf,train)
library(e1071)
f<-factor(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),exclude = NULL)
length(levels(f))
levels(f)
train1<-train
train1$total_income_hhld_code<-factor(as.character(c(1:14,NA)),exclude = NULL)
test1<-test
str(test1)
#test1$total_income_hhld_code<-factor(c(1:14,NA),exclude = NULL)
p2<-predict(rf,test)
levels(test1$total_income_hhld_code)<-c(levels(test1$total_income_hhld_code),"1","2","3","4","5","6","7","8","9","10","11","12","13","14",NA)
#test1$total_income_hhld_code<-factor(c(1:14,NA),exclude = NULL)
p2<-predict(rf,test)
library(VIM)
install.packages("VIM")
library(VIM)
dataknn<-read.csv("knnneedfix.csv")
data[,convert]<-data.frame(apply(data[convert],2,as.factor))
View(dataknn)
str(dataknn)
data[,convert]<-data.frame(apply(data[convert],2,as.factor))
View(dataknn)
str(dataknn)
library(readr)
knnneedfix <- read_csv("knnneedfix.csv",
col_types = cols(bedroom_count_code = col_integer(),
d_age = col_integer(), d_work_hours = col_integer(),
d_years_at_addr_code = col_integer(),
m_age = col_integer(), m_work_hours = col_integer(),
m_years_at_addr_code = col_integer()))
View(knnneedfix)
str(knnneedfix)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
data[,convert]<-data.frame(apply(data[convert],2,as.factor))
str(knnneedfix)
library(readr)
knnneedfix1 <- read_csv("knnneedfix.csv",
col_types = cols(NZDep2006 = col_factor(levels = c("1",
"2", "3", "4", "5", "6", "7", "8",
"9", "10")), bedroom_count_code = col_integer(),
ch_asian = col_factor(levels = c("0",
"1")), ch_euro = col_factor(levels = c("0",
"1")), ch_maori = col_factor(levels = c("0",
"1")), ch_melaa = col_factor(levels = c("0",
"1")), ch_other = col_factor(levels = c("0",
"1")), ch_pacific = col_factor(levels = c("0",
"1")), ch_sex = col_factor(levels = c("1",
"2")), child_depend_family_type_code = col_factor(levels = c("21",
"23", "24", "26", "31", "33",
"34", "36")), d_age = col_integer(),
d_asian = col_factor(levels = c("0",
"1")), d_education = col_factor(levels = c("0",
"1", "2", "3", "4", "5", "6",
"7", "8", "9", "10", "11", "12",
"13", "14")), d_euro = col_factor(levels = c("0",
"1")), d_family_role_code = col_factor(levels = c("1",
"3", "11")), d_income_srce10 = col_factor(levels = c("0",
"1")), d_income_srce11 = col_factor(levels = c("0",
"1")), d_income_srce12 = col_factor(levels = c("0",
"1")), d_income_srce7 = col_factor(levels = c("0",
"1")), d_income_srce8 = col_factor(levels = c("0",
"1")), d_income_srce9 = col_factor(levels = c("0",
"1")), d_maori = col_factor(levels = c("0",
"1")), d_melaa = col_factor(levels = c("0",
"1")), d_other = col_factor(levels = c("0",
"1")), d_pacific = col_factor(levels = c("0",
"1")), d_smoke = col_factor(levels = c("1",
"2", "3")), d_tenure_holder_code = col_factor(levels = c("1",
"2")), d_wklfs_code = col_factor(levels = c("1",
"2", "3", "4")), d_work_hours = col_integer(),
d_years_at_addr_code = col_integer(),
heat_fuel = col_factor(levels = c("0",
"1")), m_age = col_integer(),
m_asian = col_factor(levels = c("0",
"1")), m_education = col_factor(levels = c("0",
"1", "2", "3", "4", "5", "6",
"7", "8", "9", "10", "11", "12",
"13", "14")), m_euro = col_factor(levels = c("0",
"1")), m_family_role_code = col_factor(levels = c("1",
"3", "11")), m_income_srce10 = col_factor(levels = c("0",
"1")), m_income_srce11 = col_factor(levels = c("0",
"1")), m_income_srce12 = col_factor(levels = c("0",
"1")), m_income_srce7 = col_factor(levels = c("0",
"1")), m_income_srce8 = col_factor(levels = c("0",
"1")), m_income_srce9 = col_factor(levels = c("0",
"1")), m_maori = col_factor(levels = c("0",
"1")), m_melaa = col_factor(levels = c("0",
"1")), m_other = col_factor(levels = c("0",
"1")), m_pacific = col_factor(levels = c("0",
"1")), m_smoke = col_factor(levels = c("1",
"2", "3")), m_tenure_holder_code = col_factor(levels = c("1",
"2")), m_wklfs_code = col_factor(levels = c("1",
"2", "3", "4")), m_work_hours = col_integer(),
m_years_at_addr_code = col_integer(),
singparstat = col_factor(levels = c("0",
"1")), telecomm1_code = col_factor(levels = c("1",
"99")), telecomm2_code = col_factor(levels = c("2",
"99")), telecomm4_code = col_factor(levels = c("4",
"99")), total_income_hhld_code = col_factor(levels = c("1",
"2", "3", "4", "5", "6", "7",
"8", "9", "10", "11", "12", "13",
"14")), twin = col_factor(levels = c("1",
"2")), usual_resdnt_count_code = col_integer()))
View(knnneedfix)
str(knnneedfix1)
fixing<-knnneedfix1
install.packages("Hmisc")
library(Hmisc)
install.packages("DMwR")
library(DMwR)
KnnOut<-knnImputation(fixing[,!names("total_income_hhld_code"%in%"medv")])
KnnOut<-knnImputation(fixing[,!names("total_income_hhld_code")])
KnnOut<-knnImputation(fixing[,!names(fixing$total_income_hhld_code)])
KnnOut<-knnImputation(fixing)
library(VIM)
KnnOut<-kNN(fixing,k=5)
str(fixing)
KnnOut<-kNN(fixing,k=5)
KnnOut<-knnImputation(fixing,k=10,scal=T,meth="weighAvg",distData = Null)
KnnOut<-knnImputation(fixing,k=10,scal=T,meth="weighAvg" )
da00<-read.csv("knnneedfix.csv")
KnnOut<-knnImputation(da00,k=10,scal=T,meth="weighAvg" )
da00[da00=="?"]<-NA
KnnOut<-knnImputation(da00,k=10,scal=T,meth="weighAvg" )
write.csv(da00)
write.csv(da00)
write.csv(knnOut,"knnfixed.csv")
write.csv(knnOut$ximp,"knnfixed.csv")
da00<-read.csv("knnneedfix.csv",header=T)
da00[da00=="?"]<-NA
KnnOut<-knnImputation(da00,k=10,scal=T,meth="weighAvg" )
KnnOut<-knnImputation(da00,k=10,scal=T,meth="weighAvg" )
write.csv(knnOut,"knnfixed.csv")
write.csv(knnOut.ximp,"knnfixed.csv")
write.csv(knnOut$ximp,"knnfixed.csv")
write.csv(knnOut,"knnfixed.csv")
View(KnnOut)
da00<-read.csv("knnneedfix.csv",header=T)
da00[da00=="?"]<-NA
View(KnnOut)
da00[da00=="?"]<-NA
View(KnnOut)
View(da00)
KnnOut<-knnImputation(da00,k=10,scal=T,meth="weighAvg" )
View(KnnOut)
View(data_clastering$ximp)
trainingset <- read.csv("data3000.csv",header = T)
testset <- read.csv("test.csv",header = T)
fullset <- read.csv("full.csv",header=T)
library(ggplot2)
library(gridExtra)
library(corrplot)
library(randomForest)
library(ggplot2)
library(gridExtra)
library(cowplot)
library(missForest)
library(foreach)
library(iterators)
library(itertools)
#str(trainingset)
fullset$d_age<-as.integer(fullset$d_age)
#boxplot(trainingset$m_age)
fullset$m_age<-as.integer(fullset$m_age)
boxplot(fullset$d_age,fullset$m_age)
summary(fullset)
head(fullset)
k<- sapply( trainingset, as.numeric )
M <- cor(k)
dev.new(width=5, height=4)
cex.before <- par("cex")
par(cex = 0.6)#change font size
corrplot::corrplot(M,method="color")
par(cex = cex.before)
#data preparation using random forest imputation
set.seed(111)
fullset$d_work_hours<-as.integer(fullset$d_work_hours)
fullset$m_work_hours<-as.integer(fullset$m_work_hours)
fullset$d_years_at_addr_code<-as.integer(fullset$d_years_at_addr_code)
fullset$m_years_at_addr_code<-as.integer(fullset$m_years_at_addr_code)
str(fullset)
for (i in 8:58) fullset.na[sample(7621, sample(0)), i] <- NA
set.seed(222)
fullset.imputed<-rfImpute(total_income_hhld_code~.,fullset.na)
print(fullset.rf)
#data prepare:
data<-read.csv("full.csv",header = T)
data[data=="?"]<-NA
str(data)
data$ch_asian <- as.factor(data$ch_asian)
data$ch_euro <- as.factor(data$ch_euro)
data$ch_maori <- as.factor(data$ch_maori)
data$ch_melaa<-as.factor(data$ch_melaa)
data$ch_other<-as.factor(data$ch_other)
data$ch_pacific <- as.factor(data$ch_pacific)
data$m_income_srce7 <- as.factor(data$m_income_srce7)
data$m_income_srce8 <- as.factor(data$m_income_srce8)
data$m_income_srce9 <- as.factor(data$m_income_srce9)
data$m_income_srce10 <- as.factor(data$m_income_srce10)
data$m_income_srce11 <- as.factor(data$m_income_srce11)
data$m_income_srce12 <- as.factor(data$m_income_srce12)
data$d_income_srce7 <- as.factor(data$d_income_srce7)
data$d_income_srce8 <- as.factor(data$d_income_srce8)
data$d_income_srce9 <- as.factor(data$d_income_srce9)
data$d_income_srce10 <- as.factor(data$d_income_srce10)
data$d_income_srce11 <- as.factor(data$d_income_srce11)
data$d_income_srce12 <- as.factor(data$d_income_srce12)
data$ch_sex <-as.factor(data$ch_sex)
data$child_depend_family_type_code<-as.factor(data$child_depend_family_type_code)
data$telecomm1_code<-as.factor(data$telecomm1_code)
data$telecomm2_code<-as.factor(data$telecomm1_code)
data$telecomm4_code<-as.factor(data$telecomm1_code)
data$usual_resdnt_count_code<-as.factor(data$usual_resdnt_count_code)
data$twin<-as.factor(data$twin)
data$singparstat<-as.factor(data$singparstat)
data$m_age<-as.integer(data$m_age)
data$d_age<-as.integer(data$d_age)
data$d_work_hour<-as.integer(data$d_work_hour)
data$m_work_hour<-as.integer(data$m_work_hour)
data$m_years<-as.integer(data$m_years)
data$d_years<-as.integer(data$d_years)
str(data)
head(data)
set.seed(11)
colnames(data)<- c(
"id",
"NZDep",
"ch_asian",
"ch_euro",
"ch_maori",
"ch_melaa",
"ch_other",
"ch_pacific",
"m_age",
"m_asian",
"m_euro",
"m_maori",
"m_melaa",
"m_other",
"m_pacific",
"m_wklfs",
"d_age",
"d_asian",
"d_euro",
"d_maori",
"d_melaa",
"d_other",
"d_pacific",
"d_wklfs",
"bedroom",
"m_years",
"m_tenure",
"m_edu",
"m_work_hour",
"m_smoke",
"m_income7",
"m_income8",
"m_income9",
"m_income10",
"m_income11",
"m_income12",
"d_years",
"d_tenure",
"d_edu",
"d_work_hour",
"d_smoke",
"d_income7",
"d_income8",
"d_income9",
"d_income10",
"d_income11",
"d_income12",
"ch_sex",
"child_family",
"d_family_role",
"heat_fuel",
"m_family_rol",
"telecom1",
"telecom2",
"telecom4",
"usual_resdnt",
"twin",
"singpar",
"total_income",
"NA"
)
#data.imputed<-rfImpute(NZDep ~.,data=data,iter=6)
#data.imputed <-rfImpute(ch_asian ~.,data=data,iter=6)
str(data)
View(data)
install.packages("dplyr")
library(dplyr)
ncol(data)
data1<-select(data,1:59)
View(data1)
#data.mis<-prodNA(data,noNA=0.1)
#summary(data.mis)
data.imp<-missForest(data1)
data.imp <- missForest(data1, variablewise = TRUE)
data.imp$OOBerror
View(data.imp)
View(data.imp$ximp)
class(data.imp$ximp)
data.imp_saver<-data.imp$ximp
write.csv(data.imp_saver,"Fixed.csv")
data_clastering<-data.imp
View(data_clastering$ximp)
m_age_clastred<- cut(data_clastering$ximp$m_age,breaks=c(0,18,24,27,35),labels=c("1","2","3","4"))
View(data_clastred)
data_clastering$m_age<-m_age_clastred
View(data_clastering$ximp)
install.packages("dplyr")
m_age_clastred<- cut(data_clastering$ximp$m_age,breaks=c(0,18,24,27,35),labels=c("1","2","3","4"))
data_clastering<-data.imp
#data.mis<-prodNA(data,noNA=0.1)
#summary(data.mis)
data.imp<-missForest(data1)
data.imp <- missForest(data1, variablewise = TRUE)
data10<-read.csv("fixed.csv")
m_age_clastred<- cut(data10$m_age,breaks=c(0,18,24,27,35),labels=c("1","2","3","4"))
View(data_clastred)
data10$m_age<-m_age_clastred
View(data10)
m_age_clastred<- cut(data10$m_age,breaks=c(0,18,24,27,35),labels=c("A","B","C","D"))
m_age_clastred<- cut(data10$m_age,breaks=c(0,18,24,27,35),labels=c("1","2","3","4"))
data10<-read.csv("fixed.csv",header = T)
m_age_clastred<- cut(data10$m_age,breaks=c(0,18,24,27,35),labels=c("1","2","3","4"))
data10$m_age<-m_age_clastred
View(data10)
data100<-read.csv("fixed.csv")
bench<- 47
dataxxx<-data100[data100$m_age]
dataxxx<-data100[data100$m_age<bench]
data.imp$OOBerror
fixed$OOBerror
fixed<-read.csv("finalcorrect.csv")
fixed$OOBerror
fixed.imp$OOBerror
data1.imp$OOBerror
dataknn<-read.csv("correct.csv",header = T)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
dataknn[,convert]<-data.frame(apply(dataknn[convert],2,as.numeric))
datafixwithknn[dataknn=="?"]<-NA
dataknn<-read.csv("correct.csv",header = T)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
datafixwithknn[dataknn=="?"]<-NA
dataknn[dataknn=="?"]<-NA
dataknn[,convert]<-data.frame(apply(dataknn[convert],2,as.numeric))
#datafixwithknn[dataknn=="?"]<-NA
KnnOut<-kNN(datafixwithknn,k=10 )
#datafixwithknn[dataknn=="?"]<-NA
KnnOut<-kNN(dataknn,k=10 )
#datafixwithknn[dataknn=="?"]<-NA
KnnOut<-kNN(dataknn,k=10 )
#datafixwithknn[dataknn=="?"]<-NA
set.seed(111)
KnnOut<-kNN(dataknn,k=10 )
KnnOut<-kNN(dataknn,variable = c(dataknn~),k=10 )
KnnOut<-kNN(dataknn,variable = c(dataknn~,),k=10 )
KnnOut<-kNN(dataknn,k=10 )
dataknn<-read.csv("correct.csv",header = T)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
dataknn<-read.csv("knnneedfix.csv",header = T)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
dataknn[dataknn=="?"]<-NA
#datafixwithknn[dataknn=="?"]<-NA
set.seed(111)
KnnOut<-kNN(dataknn,k=10 )
dataknn<-read.csv("knnneedfix.csv",header = T)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
dataknn[dataknn=="?"]<-NA
dataknn[,convert]<-data.frame(apply(dataknn[convert],2,as.numeric))
KnnOut<-kNN(dataknn,k=10 )
#datafixwithknn[dataknn=="?"]<-NA
set.seed(111)
KnnOut<-kNN(dataknn,k=10 )
dataknn<-read.csv("knnneedfix.csv",header = T)
convert<-c(2,3,4,5,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,27,28,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59)
dataknn[dataknn=="?"]<-NA
dataknn[,convert]<-data.frame(apply(dataknn[convert],2,as.numeric))
#datafixwithknn[dataknn=="?"]<-NA
View(dataknn)
KnnOut<-kNN(dataknn,k=5)
KnnOut<-kNN(dataknn,K=10)
